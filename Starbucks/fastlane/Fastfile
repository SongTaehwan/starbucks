# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  SLACK_URL = ENV["SLACK_URL"]
  BUCKET_URL = ENV["BUCKET_URL"]
  WORKSPACE = "Starbucks.xcworkspace"
  DEBUG = "Debug"
  RELEASE = "Release"
  CI = ENV["CI"]

  # Github & Match
  GIT_AUTH_TOKEN = ENV["MATCH_GIT_BASIC_AUTHORIZATION"]
  MATCH_USERNAME = ENV["MATCH_USERNAME"]
  MATCH_TEAM_ID = ENV["FASTLANE_TEAM_ID"]
  MATCH_GIT_URL = ENV["MATCH_GIT_URL"]

  # AWS S3
  S3_ACCESS_KEY = ENV['S3_ACCESS_KEY']
  S3_SECRET_ACCESS_KEY = ENV['S3_SECRET_ACCESS_KEY']
  S3_BUCKET = ENV['S3_BUCKET']
  S3_REGION = ENV['S3_REGION']

  lane :get_certificate do |options|
    setup_ci if CI

    sync_code_signing(
      username: MATCH_USERNAME,
      team_id: MATCH_TEAM_ID,
      storage_mode: "git",
      git_url: MATCH_GIT_URL,
      git_basic_authorization: GIT_AUTH_TOKEN,
      type: options[:type], 
      readonly: true
    )
  end

  lane :developent_build do
    build_app(
      workspace: WORKSPACE,
      scheme: DEBUG,
      output_directory: "./Build",
      configuration: DEBUG,
      silent: true,
      export_options: {
        compileBitcode: true,
        destination: "export", # Î°úÏª¨Ïóê export Ìï†ÏßÄ Ïï†ÌîåÎ°ú Î∞îÎ°ú ÏóÖÎ°úÎìúÌï†ÏßÄ Í≤∞Ï†ï
        manifest: {
          appURL: "#{BUCKET_URL}/Starbucks.ipa",
          displayImageURL: BUCKET_URL,
          fullSizeImageURL: BUCKET_URL
        },
        method: "development", # export Î∞©Ïãù
        signingStyle: "automatic", # ÏûêÎèô signing
        thinning: "<none>" # ÎîîÎ∞îÏù¥Ïä§ ÌäπÏÑ±Ïóê ÎßûÍ≤å ÏÑ§Ïπò ÏµúÏ†ÅÌôî
      }
    )
  end

  lane :release_build do
    build_app(
      silent: true,
      workspace: WORKSPACE,
      scheme: RELEASE,
      configuration: RELEASE,
      export_method: "app-store",
      include_bitcode: true,
      include_symbols: true
    )
  end

  desc "Run tests"
  lane :test do
    run_tests(
      workspace: WORKSPACE,
      scheme: DEBUG,
      device: "iPhone 13 Pro"
    )
  end

  desc "üèÉ‚Äç‚ôÇÔ∏è Deployment Process for Development with AWS S3"
  lane :dev do
    get_certificate(type: "development")
    developent_build

    desc "ü™£ Upload a new ipa file to S3"
    aws_s3(
      # All of these are used to make Shenzhen's `ipa distribute:s3` command
      access_key: S3_ACCESS_KEY,               # Optional - defaults to AWS Instance Profile Creds.
      secret_access_key: S3_SECRET_ACCESS_KEY, # Optional - defaults to AWS Instance Profile Creds.
      bucket: S3_BUCKET,                       # Required from user.
      region: S3_REGION,                       # Required from user.
      upload_metadata: true,                   # Upload version.json, plist and HTML. Set to false to skip uploading of these files.
      plist_file_name: "manifest.plist",
      path: "",
      skip_html_upload: true,
      acl: "private"
    )
  end

  desc "üèÉ‚Äç‚ôÇÔ∏è Deploy app to Testflight" 
  lane :flight do
    get_certificate(type: "appstore")
    
    increment_build_number
    # increment_build_number(
    #   build_number: latest_testflight_build_number(
    #     api_key: ENV["APPLE_API_KEY"],
    #     username: ENV["PILOT_USERNAME"],
    #     team_id: ENV["PILOT_TEAM_ID"]
    #   ) + 1
    # )

    release_build

    upload_to_testflight(
      # ÏóÜÏúºÎ©¥ ÏùºÎ∞òÏ†ÅÏù∏ Ïï†Ìîå Î°úÍ∑∏Ïù∏ ÌîÑÎ°úÏÑ∏Ïä§Î°ú ÏßÑÌñâ
      # Î°úÏª¨ ÌôòÍ≤ΩÏóêÏÑ† keychain Ïù¥ Ï†ïÎ≥¥Î•º Í∞ÄÏßÑ Í≤ΩÏö∞ÏóêÎäî ÏûêÎèô Î°úÍ∑∏Ïù∏Îêå
      # https://docs.fastlane.tools/actions/upload_to_testflight/#use-an-application-specific-password-to-upload
      verbose: true,
      # Github Env Î°ú ÎÑ£Í∏∞
      username: ENV["PILOT_USERNAME"], # Ïï†Ìîå Í≥ÑÏ†ï ÏïÑÏù¥Îîî
      apple_id: ENV["PILOT_APPLE_ID"], # Ïï± ÏïÑÏù¥Îîî
      team_id: ENV["PILOT_TEAM_ID"], # App Store Connect ÌåÄ ÏïÑÏù¥Îîî
      dev_portal_team_id: ENV["PILOT_DEV_PORTAL_TEAM_ID"], # Dev Portal Team ID
      skip_waiting_for_build_processing: true,
      changelog: "Testing App"
    )
  end

  desc "üëç Send message when job's done "
  after_all do |lane|
    say("Successfully finished lane (#{lane})!")
    slack(
      message: "Job's Done! (#{lane})"
    )
  end

  desc "üö® Sending error notification"
  error do |lane, exception|
    slack(
      message: exception.to_s,
      slack_url: SLACK_URL,
      success: false, 
      # Output containing extended log output
      payload: { 
        "Build Date" => Time.new.to_s,
        "Built by" => "Fastlane",
      } 
    )
  end
end
